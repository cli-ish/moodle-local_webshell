{"version":3,"file":"shell.min.js","sources":["../src/shell.js"],"sourcesContent":["/**\n * Shell Component.\n *\n * @module     local_webshell/shell\n * @class      local_webshell/shell\n * @copyright  2024 Vincent Schneider (cli-ish)\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ajax from 'core/ajax';\n\nexport default class Component {\n    constructor() {\n        this.resultbox = document.querySelector('body .local_webshell .shell-result');\n        this.inputbox = document.querySelector('body .local_webshell .shell-input');\n        this.stateReady();\n    }\n\n    /**\n     * Static method to create a component instance from the mustache template.\n     *\n     * @return {Component}\n     */\n    static init() {\n        return new Component();\n    }\n\n    _updateUi(result) {\n        this.inputbox.querySelector('.username').innerText = result.user;\n        this.inputbox.querySelector('.workingdir').innerText = result.workingdir;\n    }\n\n    _printResult(command, result) {\n        const cmdNode = document.createElement('div');\n        cmdNode.innerHTML = '<div class=\"cmdline\"><span class=\"username\">' + result.user + ':</span><span class=\"workingdir\">' +\n            result.workingdir + '</span><span class=\"arg\">#</span> ' + command + '</div>';\n        this.resultbox.appendChild(cmdNode);\n        const resultNode = document.createElement('div');\n        resultNode.textContent += atob(result.result); // This is not deprecated in this context.\n        this.resultbox.appendChild(resultNode);\n        this.resultbox.scrollTop = this.resultbox.scrollHeight;\n    }\n\n    _execCommand(command, callback) {\n        let promises = ajax.call([\n            {\n                methodname: 'local_webshell_run',\n                args: {\n                    command: command,\n                }\n            }\n        ]);\n        promises[0].done(function(response) {\n            // Todo: handle errors?\n            callback(response);\n        });\n    }\n\n    _hinting(value, type, callback) {\n        let promises = ajax.call([\n            {\n                methodname: 'local_webshell_hinting',\n                args: {\n                    value: value,\n                    type: type\n                }\n            }\n        ]);\n        promises[0].done(function(response) {\n            // Todo: handle errors?\n            callback(response);\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     */\n    stateReady() {\n        let that = this;\n        this.inputbox.querySelector('#shell-cmd').addEventListener('keydown', e => {\n            let command = '';\n            switch (event.key) {\n                case 'Enter':\n                    command = e.target.value;\n                    // Todo: insert into history!\n                    // Todo: reset cursor of history.\n                    e.target.value = '';\n                    if (command === 'clear') {\n                        that.resultbox.innerHTML = '';\n                        return;\n                    }\n                    that._execCommand(command, data => {\n                        that._printResult(command, data);\n                        that._updateUi(data);\n                    });\n                    break;\n                case 'ArrowUp':\n                    // Todo: move cursor one up in history.\n                    break;\n                case 'ArrowDown':\n                    // Todo: move cursor one down in history.\n                    break;\n                case 'Tab':\n                    e.preventDefault();\n                    that._autocomplete(e.target);\n\n                    break;\n            }\n        });\n    }\n\n    _autocomplete(target) {\n        let command = target.value;\n        if (command.trim().length === 0) {\n            return;\n        }\n        let parts = command.split(' ');\n        let type = (parts.length === 1) ? 'binary' : 'file';\n        let value = (type === 'binary') ? parts[0] : parts[parts.length - 1];\n        let resultStr = '';\n        let that = this;\n        this._hinting(value, type, result => {\n            if (result.matches.length <= 0) {\n                return;\n            }\n            if (result.matches.length === 1) {\n                if (type === 'binary') {\n                    // We can replace the whole string since we know that we don't have more yet!\n                    target.value = result.matches[0];\n                } else {\n                    target.value = command.replace(/(\\S*)$/, result.matches[0]);\n                }\n            } else {\n                resultStr = '';\n                let count = 0;\n                result.matches.forEach(entry => {\n                    resultStr += entry + '\\t';\n                    if (count > 5) {\n                        count = 0;\n                        resultStr += '\\n';\n                    }\n                    count++;\n                });\n                result.result = btoa(resultStr);\n                that._printResult(command, result);\n            }\n        });\n    }\n}"],"names":["Component","constructor","resultbox","document","querySelector","inputbox","stateReady","_updateUi","result","innerText","user","workingdir","_printResult","command","cmdNode","createElement","innerHTML","appendChild","resultNode","textContent","atob","scrollTop","this","scrollHeight","_execCommand","callback","ajax","call","methodname","args","done","response","_hinting","value","type","that","addEventListener","e","event","key","target","data","preventDefault","_autocomplete","trim","length","parts","split","resultStr","matches","replace","count","forEach","entry","btoa"],"mappings":";;;;;;;;+IAWqBA,UACjBC,mBACSC,UAAYC,SAASC,cAAc,2CACnCC,SAAWF,SAASC,cAAc,0CAClCE,kCASE,IAAIN,UAGfO,UAAUC,aACDH,SAASD,cAAc,aAAaK,UAAYD,OAAOE,UACvDL,SAASD,cAAc,eAAeK,UAAYD,OAAOG,WAGlEC,aAAaC,QAASL,cACZM,QAAUX,SAASY,cAAc,OACvCD,QAAQE,UAAY,+CAAiDR,OAAOE,KAAO,oCAC/EF,OAAOG,WAAa,qCAAuCE,QAAU,cACpEX,UAAUe,YAAYH,eACrBI,WAAaf,SAASY,cAAc,OAC1CG,WAAWC,aAAeC,KAAKZ,OAAOA,aACjCN,UAAUe,YAAYC,iBACtBhB,UAAUmB,UAAYC,KAAKpB,UAAUqB,aAG9CC,aAAaX,QAASY,UACHC,cAAKC,KAAK,CACrB,CACIC,WAAY,qBACZC,KAAM,CACFhB,QAASA,YAIZ,GAAGiB,MAAK,SAASC,UAEtBN,SAASM,aAIjBC,SAASC,MAAOC,KAAMT,UACHC,cAAKC,KAAK,CACrB,CACIC,WAAY,yBACZC,KAAM,CACFI,MAAOA,MACPC,KAAMA,SAIT,GAAGJ,MAAK,SAASC,UAEtBN,SAASM,aAOjBzB,iBACQ6B,KAAOb,UACNjB,SAASD,cAAc,cAAcgC,iBAAiB,WAAWC,QAC9DxB,QAAU,UACNyB,MAAMC,SACL,WACD1B,QAAUwB,EAAEG,OAAOP,MAGnBI,EAAEG,OAAOP,MAAQ,GACD,UAAZpB,oBACAsB,KAAKjC,UAAUc,UAAY,IAG/BmB,KAAKX,aAAaX,SAAS4B,OACvBN,KAAKvB,aAAaC,QAAS4B,MAC3BN,KAAK5B,UAAUkC,mBAGlB,cAGA,sBAGA,MACDJ,EAAEK,iBACFP,KAAKQ,cAAcN,EAAEG,YAOrCG,cAAcH,YACN3B,QAAU2B,OAAOP,SACS,IAA1BpB,QAAQ+B,OAAOC,kBAGfC,MAAQjC,QAAQkC,MAAM,KACtBb,KAAyB,IAAjBY,MAAMD,OAAgB,SAAW,OACzCZ,MAAkB,WAATC,KAAqBY,MAAM,GAAKA,MAAMA,MAAMD,OAAS,GAC9DG,UAAY,GACZb,KAAOb,UACNU,SAASC,MAAOC,MAAM1B,cACnBA,OAAOyC,QAAQJ,QAAU,MAGC,IAA1BrC,OAAOyC,QAAQJ,OAGXL,OAAOP,MAFE,WAATC,KAEe1B,OAAOyC,QAAQ,GAEfpC,QAAQqC,QAAQ,SAAU1C,OAAOyC,QAAQ,QAEzD,CACHD,UAAY,OACRG,MAAQ,EACZ3C,OAAOyC,QAAQG,SAAQC,QACnBL,WAAaK,MAAQ,KACjBF,MAAQ,IACRA,MAAQ,EACRH,WAAa,MAEjBG,WAEJ3C,OAAOA,OAAS8C,KAAKN,WACrBb,KAAKvB,aAAaC,QAASL"}